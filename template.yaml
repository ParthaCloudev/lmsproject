AWSTemplateFormatVersion: '2010-09-09'
Description: Image Processing Pipeline v2

Parameters:
  CodeS3Bucket:
    Type: String
  UploadLambdaKey:
    Type: String
  ProcessorLambdaKey:
    Type: String

Resources:
  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: imageprocessin2

  UploadLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: upload_lambda2
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref UploadLambdaKey
      Runtime: python3.12
      Timeout: 10

  ProcessorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: image_processor2
      Handler: index.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref ProcessorLambdaKey
      Runtime: python3.12
      Timeout: 10

  S3InvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProcessorLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt ImageBucket.Arn

  S3Notification:
    Type: AWS::S3::BucketNotification
    DependsOn: ProcessorLambda
    Properties:
      Bucket: !Ref ImageBucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: raw2/
            Function: !GetAtt ProcessorLambda.Arn

  APIGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: lmsprojapi2

  RootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !GetAtt APIGateway.RootResourceId
      RestApiId: !Ref APIGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FuncArn}/invocations
          - { FuncArn: !GetAtt UploadLambda.Arn }

  LambdaInvokePermissionForAPI:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref UploadLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
